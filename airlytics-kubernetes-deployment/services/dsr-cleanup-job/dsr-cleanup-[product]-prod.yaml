apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: dsr-cleanup-<PRODUCT>-prod
  namespace: airlytics
  labels:
    app: dsr-cleanup-<PRODUCT>
  annotations:
    deployment.kubernetes.io/revision: '3'
spec:
  schedule: "30 4 * * 0,3"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: dsr-cleanup-<PRODUCT>
        spec:
          nodeSelector:
            pod-type: <POD_TYPE>
          volumes:
            - name: persistence-pv-storage
              persistentVolumeClaim:
                claimName: consumers-aws-efs
          containers:
            - name: dsr-cleanup
              image: <IMAGE_STORE_SERVER>/airlytics/dsr-cleanup-job:latest
              volumeMounts:
                - name: persistence-pv-storage
                  mountPath: /usr/src/app/data
              ports:
                - containerPort: 8081
                  name: web
                  protocol: TCP
              env:
                - name: AIRLYTICS_ENVIRONMENT
                  value: 'PROD'
                - name: AIRLYTICS_PRODUCT
                  value: '<PRODUCT>'
                - name: AIRLYTICS_DEPLOYMENT
                  valueFrom:
                    configMapKeyRef:
                      name: airlytics-deployments-config
                      key: airlytics.deployment
              livenessProbe:
                httpGet:
                  path: /healthcheck/is-alive
                  port: web
                initialDelaySeconds: 30
                periodSeconds: 30
              readinessProbe:
                httpGet:
                  path: /healthcheck/is-ready
                  port: web
                initialDelaySeconds: 30
                periodSeconds: 30
              resources:
                limits:
                  memory: 256Mi
                requests:
                  memory: 256Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Never
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler