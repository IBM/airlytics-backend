plugins {
    id 'java'
}

group 'airlytics'
version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url = artifactory_url + artifactory_repo_key_airlock
        credentials {
            username artifactory_username
            password artifactory_password
        }
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.9'
    testCompile group: 'org.powermock', name: 'powermock-core', version: '2.0.7'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.7'
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.7'
    testCompile("org.assertj:assertj-core:3.11.1")


    compile group: 'org.testng', name: 'testng', version: '6.14.3'
    compile group: 'software.amazon.awssdk', name: 'protocol-core', version: '2.15.20'
    compile group: 'software.amazon.awssdk', name: 'athena', version: '2.15.20'
    compile 'mysql:mysql-connector-java:8.0.22'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.2.0'
    compile group: 'org.apache.kafka', name: 'kafka_2.12', version: '2.2.1'
    compile group: 'org.apache.kafka', name: 'connect-json', version: '2.3.1'
    compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    implementation 'org.json:json:20171018'
    implementation 'org.postgresql:postgresql:42.2.18'
    implementation group: 'com.opencsv', name: 'opencsv', version: '5.2'
    implementation 'com.mparticle:server-events-sdk:2.3.2'

    implementation  group: 'com.airlock', name: 'airlock-java-sources', version: '1.1.0'

    // Needed for Airlock
    implementation 'com.squareup.okhttp3:okhttp:3.4.1'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.4.1'

    implementation group: 'com.sangupta', name: 'murmur', version: '1.0.0'

    // web server for health and monitoring
    implementation group: 'io.undertow', name: 'undertow-core', version: '2.2.0.Final'
    implementation group: 'io.undertow', name: 'undertow-servlet', version: '2.2.0.Final'

    // Prometheus monitoring
    implementation group: 'io.prometheus', name: 'simpleclient', version: '0.8.0'
    implementation group: 'io.prometheus', name: 'simpleclient_hotspot', version: '0.8.0'
    implementation group: 'io.prometheus', name: 'simpleclient_servlet', version: '0.8.0'

    // Segment
    implementation 'com.segment.analytics.java:analytics:2.1.1'

    // Android API
    implementation "com.google.apis:google-api-services-androidpublisher:v3-rev103-1.25.0"
    implementation "com.google.auth:google-auth-library-oauth2-http:0.17.1"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // https://mvnrepository.com/artifact/org.apache.parquet/parquet-avro
    implementation('org.apache.parquet:parquet-avro:1.10.1') {
        exclude group: 'org.apache.parquet.hadoop.*'
        exclude group: 'org.apache.parquet.schema.*'
        exclude group: 'org.apache.parquet.format.*'
        exclude group: 'org.apache.parquet.column.*'
        exclude group: 'org.apache.parquet.jackson.*'
    }

    // https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-common
    implementation('org.apache.hadoop:hadoop-common:3.1.0') {
        exclude group: 'org.apache.parquet.hadoop.*'
        exclude group: 'org.apache.parquet.schema.*'
        exclude group: 'org.apache.parquet.format.*'
        exclude group: 'org.apache.parquet.column.*'
        exclude group: 'org.apache.parquet.jackson.*'
    }

    // https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-mapred
    implementation('org.apache.hadoop:hadoop-mapred:0.22.0') {
        exclude group: 'org.apache.parquet.hadoop.*'
        exclude group: 'org.apache.parquet.schema.*'
        exclude group: 'org.apache.parquet.format.*'
        exclude group: 'org.apache.parquet.column.*'
        exclude group: 'org.apache.parquet.jackson.*'
    }

    // https://mvnrepository.com/artifact/org.apache.parquet/parquet-common
    implementation('org.apache.parquet:parquet-common:1.10.1') {
        exclude group: 'org.apache.parquet.hadoop.*'
        exclude group: 'org.apache.parquet.schema.*'
        exclude group: 'org.apache.parquet.format.*'
        exclude group: 'org.apache.parquet.column.*'
        exclude group: 'org.apache.parquet.jackson.*'
    }

    // https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-aws
    //compile group: 'org.apache.hadoop', name: 'hadoop-aws', version: '3.1.0'
    implementation ('org.apache.hadoop:hadoop-aws:3.1.0') {
        exclude group: 'org.apache.parquet.hadoop.*'
        exclude group: 'org.apache.parquet.schema.*'
        exclude group: 'org.apache.parquet.format.*'
        exclude group: 'org.apache.parquet.column.*'
        exclude group: 'org.apache.parquet.jackson.*'
    }

    implementation group: 'org.apache.avro', name: 'avro', version: '1.10.1'

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'com.fasterxml.jackson.core' && details.requested.name == 'jackson-databind' && details.requested.version == '2.9.8') {
                details.useVersion '2.9.10.8'
                details.because 'fixes critical vulnerability issue in 2.9.8'
            }
        }

        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.apache.hadoop' && details.requested.name == 'hadoop-common' && details.requested.version == '3.1.0') {
                details.useVersion '3.1.1'
                details.because 'fixes critical vulnerability issue in 3.1.0'
            }
        }
    }

    task fatJar(type: Jar) {
        zip64 true
        manifest {
            attributes "Main-Class": "com.ibm.airlytics.consumer.ConsumerMain"
        }
        baseName = 'AirlyticsConsumer'
        zip64 true
        from {
            configurations.runtimeClasspath.filter( {! (it.name =~ /parquet-column-1\.10.*\.jar/ )  && ! (it.name =~ /parquet-format-2\.4.*\.jar/ ) && ! (it.name =~ /parquet-hadoop-1\.10.*\.jar/ )}).collect {it.isDirectory() ? it : zipTree(it)}
        }
        with jar
    }

}
